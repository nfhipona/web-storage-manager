"use strict";
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiLi4vLi4vc3JjL2NsYXNzL2ludGVyZmFjZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9BUEkvU3RvcmFnZVxuXG5leHBvcnQgdHlwZSBLZXlQYXRoID0gc3RyaW5nO1xuZXhwb3J0IHR5cGUgU3RvcmFnZVZhbHVlID0gYW55O1xuZXhwb3J0IHR5cGUgU3RvcmFnZUl0ZW0gPSB7IGtleTogS2V5UGF0aCwgdmFsdWU6IFN0b3JhZ2VWYWx1ZSB9O1xuXG4vKipcbiAqIEF0dHJpYnV0ZSBjb21wYXJlIHdpbGwgd29yayBmb3IgYSBjb2xsZWN0aW9uIG9mIGl0ZW1zIHdoZXJlIHZhbHVlcyBtYXRjaCBvciB3aWxsIHJlcGxhY2UgYSB2YWx1ZSBvZiB0aGUgbWF0Y2hlZCBrZXkgZm9yIGRhdGEgb2JqZWN0cy5cbiAqL1xuZXhwb3J0IHR5cGUgQXR0cmlidXRlQ29tcGFyZSA9IHsgbmFtZTogc3RyaW5nLCB2YWx1ZTogc3RyaW5nIHwgbnVtYmVyIH07XG5cbmV4cG9ydCBpbnRlcmZhY2UgU3RvcmFnZSB7XG4gICAgLyoqXG4gICAgICoga2V5cGF0aCBkZWxpbWV0ZXIuIGRlZmF1bHRzIHRvICcuJy5cbiAgICAgKi9cbiAgICBkZWxpbWl0ZXI6IHN0cmluZztcblxuICAgIC8qKlxuICAgICAqIFJldHVybnMgYW4gaW50ZWdlciByZXByZXNlbnRpbmcgdGhlIG51bWJlciBvZiBkYXRhIGl0ZW1zIHN0b3JlZCBpbiB0aGUgU3RvcmFnZSBvYmplY3QuXG4gICAgICovXG4gICAgZ2V0IGxlbmd0aCgpOiBudW1iZXI7XG5cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGFuIGludGVnZXIgcmVwcmVzZW50aW5nIHRoZSBudW1iZXIgb2YgZGF0YSBpdGVtcyBzdG9yZWQgaW4gdGhlIFN0b3JhZ2Ugb2JqZWN0LlxuICAgICAqIEBwYXJhbSBuIFdoZW4gcGFzc2VkIGEgbnVtYmVyIG4sIHRoaXMgbWV0aG9kIHdpbGwgcmV0dXJuIHRoZSBuYW1lIG9mIHRoZSBudGgga2V5IGluIHRoZSBzdG9yYWdlLlxuICAgICAqL1xuICAgIGtleShuOiBudW1iZXIpOiBudW1iZXI7XG5cbiAgICAvKipcbiAgICAgKiBXaGVuIHBhc3NlZCBhIGtleSBuYW1lLCB3aWxsIHJldHVybiB0aGF0IGtleSdzIHZhbHVlLlxuICAgICAqIEBwYXJhbSB7S2V5UGF0aH0ga2V5IGtleSBuYW1lLlxuICAgICAqL1xuICAgIGdldEl0ZW0oa2V5OiBLZXlQYXRoKTogU3RvcmFnZVZhbHVlO1xuXG4gICAgLyoqXG4gICAgICogV2hlbiBwYXNzZWQgYSBrZXkgbmFtZSBhbmQgdmFsdWUsIHdpbGwgYWRkIHRoYXQga2V5IHRvIHRoZSBzdG9yYWdlLCBvciB1cGRhdGUgdGhhdCBrZXkncyB2YWx1ZSBpZiBpdCBhbHJlYWR5IGV4aXN0cy5cbiAgICAgKiBAcGFyYW0ge0tleVBhdGh9IGtleSBBIHN0cmluZyBjb250YWluaW5nIHRoZSBuYW1lIG9mIHRoZSBrZXkgeW91IHdhbnQgdG8gY3JlYXRlL3VwZGF0ZS5cbiAgICAgKiBAcGFyYW0ge1N0b3JhZ2VWYWx1ZX0gdmFsdWUgQSBzdHJpbmcgY29udGFpbmluZyB0aGUgdmFsdWUgeW91IHdhbnQgdG8gZ2l2ZSB0aGUga2V5IHlvdSBhcmUgY3JlYXRpbmcvdXBkYXRpbmcuXG4gICAgICovXG4gICAgc2V0SXRlbShrZXk6IEtleVBhdGgsIHZhbHVlOiBTdG9yYWdlVmFsdWUpOiBib29sZWFuIHwgRXJyb3I7XG5cbiAgICAvKipcbiAgICAgKiBXaGVuIHBhc3NlZCBhIGtleSBuYW1lLCB3aWxsIHJlbW92ZSB0aGF0IGtleSBmcm9tIHRoZSBzdG9yYWdlLlxuICAgICAqIEBwYXJhbSB7S2V5UGF0aH0ga2V5IEEgc3RyaW5nIGNvbnRhaW5pbmcgdGhlIG5hbWUgb2YgdGhlIGtleSB5b3Ugd2FudCB0byByZW1vdmUuXG4gICAgICovXG4gICAgcmVtb3ZlSXRlbShrZXk6IEtleVBhdGgpOiB2b2lkO1xuXG4gICAgLyoqXG4gICAgICogV2hlbiBpbnZva2VkLCB3aWxsIGVtcHR5IGFsbCBrZXlzIG91dCBvZiB0aGUgc3RvcmFnZS5cbiAgICAgKi9cbiAgICBjbGVhcigpOiB2b2lkO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFdlYlN0b3JhZ2UgZXh0ZW5kcyBTdG9yYWdlIHtcblxuICAgIC8qKlxuICAgICAqIEFwcGVuZCBpdGVtIHRvIHRoZSBkYXRhIGluIHRoZSBzcGVjaWZpZWQga2V5cGF0aC5cbiAgICAgKiBAcGFyYW0ga2V5IHRhcmdldCBrZXlwYXRoXG4gICAgICogQHBhcmFtIHZhbHVlIHZhbHVlIHRvIGJlIGFkZGVkIG9yIGFwcGVuZGVkIHRvIGV4aXN0aW5nIGRhdGEgaW4gdGhlIHNwZWNpZmllZCBrZXlwYXRoLlxuICAgICAqL1xuICAgIGFwcGVuZEl0ZW0oa2V5OiBLZXlQYXRoLCB2YWx1ZTogU3RvcmFnZVZhbHVlKTogYm9vbGVhbiB8IEVycm9yO1xuXG4gICAgLyoqXG4gICAgICogQWRkIG11bHRpcGxlIGVudHJpZXMgb2Yga2V5IHZhbHVlIHBhaXJzIHRvIHRoZSBzdG9yYWdlLlxuICAgICAqIEBwYXJhbSB7U3RvcmFnZUl0ZW1bXX0gaXRlbXMgSXRlbXMgdG8gYWRkIGluZGl2aWR1YWxseSBpbiB0aGUgc3RvcmFnZS5cbiAgICAgKi9cbiAgICBzZXRNdWx0aXBsZUl0ZW1zKGl0ZW1zOiBTdG9yYWdlSXRlbVtdKTogYm9vbGVhbiB8IEVycm9yO1xuXG4gICAgLyoqXG4gICAgICogUmVtb3ZlIG11bHRpcGxlIGVudHJpZXMgZm91bmQgaW4gdGhlIHNwZWNpZmllZCBrZXlwYXRocy5cbiAgICAgKiBAcGFyYW0ge0tleVBhdGhbXX0ga2V5cyBcbiAgICAgKi9cbiAgICByZW1vdmVNdWx0aXBsZUl0ZW1zKGtleXM6IEtleVBhdGhbXSk6IHZvaWQ7XG5cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIG11bHRpcGxlIGVudHJpZXMgZm91bmQgaW4gdGhlIHNwZWNpZmllZCBrZXlwYXRocy5cbiAgICAgKiBAcGFyYW0ge0tleVBhdGhbXX0ga2V5cyBcbiAgICAgKi9cbiAgICBnZXRNdWx0aXBsZUl0ZW1zKGtleXM6IEtleVBhdGhbXSk6IFN0b3JhZ2VWYWx1ZVtdO1xuXG4gICAgLyoqXG4gICAgICogQXBwZW5kIGl0ZW0gdG8gYW4gZXhpc3RpbmcgaXRlbSBvbiB0aGUgc3RvcmFnZS4gV29ya3MgZm9yIG9iamVjdCBhbmQgYXJyYXkgdHlwZSBkYXRhLlxuICAgICAqIEBwYXJhbSB7S2V5UGF0aH0ga2V5IGtleXBhdGggb2YgdGhlIGRhdGEgeW91IHdhbnQgdG8gYXBwZW5kIHRvLlxuICAgICAqIEBwYXJhbSB7U3RvcmFnZVZhbHVlfSB2YWx1ZSBkYXRhIHZhbHVlIHlvdSB3YW50IHRvIGFwcGVuZCB0by5cbiAgICAgKi9cbiAgICBhcHBlbmRJdGVtSW5JdGVtKGtleTogS2V5UGF0aCwgdmFsdWU6IFN0b3JhZ2VWYWx1ZSk6IGJvb2xlYW4gfCBFcnJvcjtcblxuICAgIC8qKlxuICAgICAqIFVwZGF0ZXMgYW4gaXRlbSBpbiB0aGUgc3BlY2lmaWVkIGtleXBhdGguXG4gICAgICogQHBhcmFtIHtLZXlQYXRofSBrZXkga2V5cGF0aCBvZiB0aGUgZGF0YS5cbiAgICAgKiBAcGFyYW0ge1N0b3JhZ2VWYWx1ZX0gdmFsdWUgdmFsdWUgdG8gc2V0LlxuICAgICAqIEBwYXJhbSB7QXR0cmlidXRlQ29tcGFyZX0gYXR0ckNvbXBhcmUgZGF0YSBrZXkgYXR0cmlidXRlIHRvIGJlIHVwZGF0ZWQuXG4gICAgICovXG4gICAgdXBkYXRlSXRlbUluSXRlbShrZXk6IEtleVBhdGgsIHZhbHVlOiBTdG9yYWdlVmFsdWUsIGF0dHJDb21wYXJlPzogQXR0cmlidXRlQ29tcGFyZSk6IGJvb2xlYW4gfCBFcnJvcjtcblxuICAgIC8qKlxuICAgICAqIFJlbW92ZXMgYW4gaXRlbSBpbiB0aGUgc3BlY2lmaWVkIGtleXBhdGguXG4gICAgICogQHBhcmFtIHtLZXlQYXRofSBrZXkga2V5cGF0aCBvZiB0aGUgZGF0YS5cbiAgICAgKiBAcGFyYW0ge0F0dHJpYnV0ZUNvbXBhcmV9IGF0dHJDb21wYXJlIGRhdGEga2V5IGF0dHJpYnV0ZSB0byBiZSB1cGRhdGVkLlxuICAgICAqL1xuICAgIHJlbW92ZUl0ZW1Jbkl0ZW0oa2V5OiBLZXlQYXRoLCBhdHRyQ29tcGFyZT86IEF0dHJpYnV0ZUNvbXBhcmUpOiBib29sZWFuIHwgRXJyb3I7XG5cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGRhdGEgZm91bmQgaW4gdGhlIHNwZWNpZmllZCBrZXlwYXRoLlxuICAgICAqIEBwYXJhbSB7S2V5UGF0aH0ga2V5IGtleXBhdGggb2YgdGhlIGRhdGEuXG4gICAgICovXG4gICAgZ2V0SXRlbUluSXRlbShrZXk6IEtleVBhdGgpOiBTdG9yYWdlVmFsdWU7XG59Il0sIm1hcHBpbmdzIjoiIn0=