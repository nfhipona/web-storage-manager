"use strict";

var _storage = require("./class/storage");
var _encodedStorage = require("./class/encoded-storage");
var _cryptor = require("./class/cryptor");
var _encryptedStorage = require("./class/encrypted-storage");
function createLocalStorage() {
  var {
    localStorage
  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : window;
  var {
    delimiter = '.',
    isEncoded = false
  } = arguments.length > 1 ? arguments[1] : undefined;
  return isEncoded ? new _encodedStorage.EncodedWebStore(localStorage, delimiter) : new _storage.WebStore(localStorage, delimiter);
}
function createSessionStorage() {
  var {
    sessionStorage
  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : window;
  var {
    delimiter = '.',
    isEncoded = false
  } = arguments.length > 1 ? arguments[1] : undefined;
  return isEncoded ? new _encodedStorage.EncodedWebStore(sessionStorage, delimiter) : new _storage.WebStore(sessionStorage, delimiter);
}
function createEncryptedLocalStorage(cryptor) {
  var {
    localStorage
  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : window;
  var delimiter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '.';
  return new _encryptedStorage.EncryptedWebStore(localStorage, cryptor, delimiter);
}
function createEncryptedSessionStorage(cryptor) {
  var {
    sessionStorage
  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : window;
  var delimiter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '.';
  return new _encryptedStorage.EncryptedWebStore(sessionStorage, cryptor, delimiter);
}
module.exports = {
  createLocalStorage,
  createSessionStorage,
  createEncryptedLocalStorage,
  createEncryptedSessionStorage,
  LocalStorage: createLocalStorage(window, {
    isEncoded: false
  }),
  SessionStorage: createSessionStorage(window, {
    isEncoded: false
  }),
  EncodedLocalStorage: createLocalStorage(window, {
    isEncoded: true
  }),
  EncodedSessionStorage: createSessionStorage(window, {
    isEncoded: true
  }),
  WebStore: _storage.WebStore,
  EncodedWebStore: _encodedStorage.EncodedWebStore,
  CryptorDefaults: _cryptor.CryptorDefaults,
  Cryptor: _cryptor.Cryptor,
  EncryptedWebStore: _encryptedStorage.EncryptedWebStore
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfc3RvcmFnZSIsInJlcXVpcmUiLCJfZW5jb2RlZFN0b3JhZ2UiLCJfY3J5cHRvciIsIl9lbmNyeXB0ZWRTdG9yYWdlIiwiY3JlYXRlTG9jYWxTdG9yYWdlIiwibG9jYWxTdG9yYWdlIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwidW5kZWZpbmVkIiwid2luZG93IiwiZGVsaW1pdGVyIiwiaXNFbmNvZGVkIiwiRW5jb2RlZFdlYlN0b3JlIiwiV2ViU3RvcmUiLCJjcmVhdGVTZXNzaW9uU3RvcmFnZSIsInNlc3Npb25TdG9yYWdlIiwiY3JlYXRlRW5jcnlwdGVkTG9jYWxTdG9yYWdlIiwiY3J5cHRvciIsIkVuY3J5cHRlZFdlYlN0b3JlIiwiY3JlYXRlRW5jcnlwdGVkU2Vzc2lvblN0b3JhZ2UiLCJtb2R1bGUiLCJleHBvcnRzIiwiTG9jYWxTdG9yYWdlIiwiU2Vzc2lvblN0b3JhZ2UiLCJFbmNvZGVkTG9jYWxTdG9yYWdlIiwiRW5jb2RlZFNlc3Npb25TdG9yYWdlIiwiQ3J5cHRvckRlZmF1bHRzIiwiQ3J5cHRvciJdLCJzb3VyY2VzIjpbIi4uL3NyYy9pbmRleC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBXZWJTdG9yZSB9IGZyb20gJy4vY2xhc3Mvc3RvcmFnZSc7XG5pbXBvcnQgeyBFbmNvZGVkV2ViU3RvcmUgfSBmcm9tICcuL2NsYXNzL2VuY29kZWQtc3RvcmFnZSc7XG5pbXBvcnQgeyBDcnlwdG9yLCBDcnlwdG9yRGVmYXVsdHMgfSBmcm9tIFwiLi9jbGFzcy9jcnlwdG9yXCI7XG5pbXBvcnQgeyBFbmNyeXB0ZWRXZWJTdG9yZSB9IGZyb20gJy4vY2xhc3MvZW5jcnlwdGVkLXN0b3JhZ2UnO1xuXG5leHBvcnQgaW50ZXJmYWNlIE9wdGlvbnMge1xuICAgIGRlbGltaXRlcj86IHN0cmluZyxcbiAgICBpc0VuY29kZWQ6IGJvb2xlYW5cbn1cblxuZnVuY3Rpb24gY3JlYXRlTG9jYWxTdG9yYWdlKHsgbG9jYWxTdG9yYWdlIH06IGFueSA9IHdpbmRvdywgeyBkZWxpbWl0ZXIgPSAnLicsIGlzRW5jb2RlZCA9IGZhbHNlIH06IE9wdGlvbnMpIHtcbiAgICByZXR1cm4gaXNFbmNvZGVkID8gbmV3IEVuY29kZWRXZWJTdG9yZShsb2NhbFN0b3JhZ2UsIGRlbGltaXRlcikgOiBuZXcgV2ViU3RvcmUobG9jYWxTdG9yYWdlLCBkZWxpbWl0ZXIpO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVTZXNzaW9uU3RvcmFnZSh7IHNlc3Npb25TdG9yYWdlIH06IGFueSA9IHdpbmRvdywgeyBkZWxpbWl0ZXIgPSAnLicsIGlzRW5jb2RlZCA9IGZhbHNlIH06IE9wdGlvbnMpIHtcbiAgICByZXR1cm4gaXNFbmNvZGVkID8gbmV3IEVuY29kZWRXZWJTdG9yZShzZXNzaW9uU3RvcmFnZSwgZGVsaW1pdGVyKSA6IG5ldyBXZWJTdG9yZShzZXNzaW9uU3RvcmFnZSwgZGVsaW1pdGVyKTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlRW5jcnlwdGVkTG9jYWxTdG9yYWdlKGNyeXB0b3I6IENyeXB0b3IsIHsgbG9jYWxTdG9yYWdlIH06IGFueSA9IHdpbmRvdywgZGVsaW1pdGVyID0gJy4nKSB7XG4gICAgcmV0dXJuIG5ldyBFbmNyeXB0ZWRXZWJTdG9yZShsb2NhbFN0b3JhZ2UsIGNyeXB0b3IsIGRlbGltaXRlcik7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUVuY3J5cHRlZFNlc3Npb25TdG9yYWdlKGNyeXB0b3I6IENyeXB0b3IsIHsgc2Vzc2lvblN0b3JhZ2UgfTogYW55ID0gd2luZG93LCBkZWxpbWl0ZXIgPSAnLicpIHtcbiAgICByZXR1cm4gbmV3IEVuY3J5cHRlZFdlYlN0b3JlKHNlc3Npb25TdG9yYWdlLCBjcnlwdG9yLCBkZWxpbWl0ZXIpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBjcmVhdGVMb2NhbFN0b3JhZ2UsXG4gICAgY3JlYXRlU2Vzc2lvblN0b3JhZ2UsXG4gICAgY3JlYXRlRW5jcnlwdGVkTG9jYWxTdG9yYWdlLFxuICAgIGNyZWF0ZUVuY3J5cHRlZFNlc3Npb25TdG9yYWdlLFxuXG4gICAgTG9jYWxTdG9yYWdlOiBjcmVhdGVMb2NhbFN0b3JhZ2Uod2luZG93LCB7IGlzRW5jb2RlZDogZmFsc2UgfSksXG4gICAgU2Vzc2lvblN0b3JhZ2U6IGNyZWF0ZVNlc3Npb25TdG9yYWdlKHdpbmRvdywgeyBpc0VuY29kZWQ6IGZhbHNlIH0pLFxuICAgIEVuY29kZWRMb2NhbFN0b3JhZ2U6IGNyZWF0ZUxvY2FsU3RvcmFnZSh3aW5kb3csIHsgaXNFbmNvZGVkOiB0cnVlIH0pLFxuICAgIEVuY29kZWRTZXNzaW9uU3RvcmFnZTogY3JlYXRlU2Vzc2lvblN0b3JhZ2Uod2luZG93LCB7IGlzRW5jb2RlZDogdHJ1ZSB9KSxcblxuICAgIFdlYlN0b3JlLFxuICAgIEVuY29kZWRXZWJTdG9yZSxcbiAgICBDcnlwdG9yRGVmYXVsdHMsXG4gICAgQ3J5cHRvcixcbiAgICBFbmNyeXB0ZWRXZWJTdG9yZVxufTsiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBQUEsUUFBQSxHQUFBQyxPQUFBO0FBQ0EsSUFBQUMsZUFBQSxHQUFBRCxPQUFBO0FBQ0EsSUFBQUUsUUFBQSxHQUFBRixPQUFBO0FBQ0EsSUFBQUcsaUJBQUEsR0FBQUgsT0FBQTtBQU9BLFNBQVNJLGtCQUFrQkEsQ0FBQSxFQUFrRjtFQUFBLElBQWpGO0lBQUVDO0VBQWtCLENBQUMsR0FBQUMsU0FBQSxDQUFBQyxNQUFBLFFBQUFELFNBQUEsUUFBQUUsU0FBQSxHQUFBRixTQUFBLE1BQUdHLE1BQU07RUFBQSxJQUFFO0lBQUVDLFNBQVMsR0FBRyxHQUFHO0lBQUVDLFNBQVMsR0FBRztFQUFlLENBQUMsR0FBQUwsU0FBQSxDQUFBQyxNQUFBLE9BQUFELFNBQUEsTUFBQUUsU0FBQTtFQUN2RyxPQUFPRyxTQUFTLEdBQUcsSUFBSUMsK0JBQWUsQ0FBQ1AsWUFBWSxFQUFFSyxTQUFTLENBQUMsR0FBRyxJQUFJRyxpQkFBUSxDQUFDUixZQUFZLEVBQUVLLFNBQVMsQ0FBQztBQUMzRztBQUVBLFNBQVNJLG9CQUFvQkEsQ0FBQSxFQUFvRjtFQUFBLElBQW5GO0lBQUVDO0VBQW9CLENBQUMsR0FBQVQsU0FBQSxDQUFBQyxNQUFBLFFBQUFELFNBQUEsUUFBQUUsU0FBQSxHQUFBRixTQUFBLE1BQUdHLE1BQU07RUFBQSxJQUFFO0lBQUVDLFNBQVMsR0FBRyxHQUFHO0lBQUVDLFNBQVMsR0FBRztFQUFlLENBQUMsR0FBQUwsU0FBQSxDQUFBQyxNQUFBLE9BQUFELFNBQUEsTUFBQUUsU0FBQTtFQUMzRyxPQUFPRyxTQUFTLEdBQUcsSUFBSUMsK0JBQWUsQ0FBQ0csY0FBYyxFQUFFTCxTQUFTLENBQUMsR0FBRyxJQUFJRyxpQkFBUSxDQUFDRSxjQUFjLEVBQUVMLFNBQVMsQ0FBQztBQUMvRztBQUVBLFNBQVNNLDJCQUEyQkEsQ0FBQ0MsT0FBZ0IsRUFBbUQ7RUFBQSxJQUFqRDtJQUFFWjtFQUFrQixDQUFDLEdBQUFDLFNBQUEsQ0FBQUMsTUFBQSxRQUFBRCxTQUFBLFFBQUFFLFNBQUEsR0FBQUYsU0FBQSxNQUFHRyxNQUFNO0VBQUEsSUFBRUMsU0FBUyxHQUFBSixTQUFBLENBQUFDLE1BQUEsUUFBQUQsU0FBQSxRQUFBRSxTQUFBLEdBQUFGLFNBQUEsTUFBRyxHQUFHO0VBQ2xHLE9BQU8sSUFBSVksbUNBQWlCLENBQUNiLFlBQVksRUFBRVksT0FBTyxFQUFFUCxTQUFTLENBQUM7QUFDbEU7QUFFQSxTQUFTUyw2QkFBNkJBLENBQUNGLE9BQWdCLEVBQXFEO0VBQUEsSUFBbkQ7SUFBRUY7RUFBb0IsQ0FBQyxHQUFBVCxTQUFBLENBQUFDLE1BQUEsUUFBQUQsU0FBQSxRQUFBRSxTQUFBLEdBQUFGLFNBQUEsTUFBR0csTUFBTTtFQUFBLElBQUVDLFNBQVMsR0FBQUosU0FBQSxDQUFBQyxNQUFBLFFBQUFELFNBQUEsUUFBQUUsU0FBQSxHQUFBRixTQUFBLE1BQUcsR0FBRztFQUN0RyxPQUFPLElBQUlZLG1DQUFpQixDQUFDSCxjQUFjLEVBQUVFLE9BQU8sRUFBRVAsU0FBUyxDQUFDO0FBQ3BFO0FBRUFVLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHO0VBQ2JqQixrQkFBa0I7RUFDbEJVLG9CQUFvQjtFQUNwQkUsMkJBQTJCO0VBQzNCRyw2QkFBNkI7RUFFN0JHLFlBQVksRUFBRWxCLGtCQUFrQixDQUFDSyxNQUFNLEVBQUU7SUFBRUUsU0FBUyxFQUFFO0VBQU0sQ0FBQyxDQUFDO0VBQzlEWSxjQUFjLEVBQUVULG9CQUFvQixDQUFDTCxNQUFNLEVBQUU7SUFBRUUsU0FBUyxFQUFFO0VBQU0sQ0FBQyxDQUFDO0VBQ2xFYSxtQkFBbUIsRUFBRXBCLGtCQUFrQixDQUFDSyxNQUFNLEVBQUU7SUFBRUUsU0FBUyxFQUFFO0VBQUssQ0FBQyxDQUFDO0VBQ3BFYyxxQkFBcUIsRUFBRVgsb0JBQW9CLENBQUNMLE1BQU0sRUFBRTtJQUFFRSxTQUFTLEVBQUU7RUFBSyxDQUFDLENBQUM7RUFFeEVFLFFBQVEsRUFBUkEsaUJBQVE7RUFDUkQsZUFBZSxFQUFmQSwrQkFBZTtFQUNmYyxlQUFlLEVBQWZBLHdCQUFlO0VBQ2ZDLE9BQU8sRUFBUEEsZ0JBQU87RUFDUFQsaUJBQWlCLEVBQWpCQTtBQUNKLENBQUMifQ==